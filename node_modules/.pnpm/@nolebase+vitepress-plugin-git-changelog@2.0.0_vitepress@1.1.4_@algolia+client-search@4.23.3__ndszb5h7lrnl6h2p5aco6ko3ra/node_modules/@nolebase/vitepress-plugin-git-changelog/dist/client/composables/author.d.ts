import type { Commit, Contributor } from '../../types';
export interface AuthorInfo {
    name: string;
    commitsCount: number;
    avatarUrl?: string;
    url?: string;
}
export declare function findMapAuthorByName(mapContributors: Contributor[] | undefined, author_name: string): Contributor | undefined;
export declare function findMapAuthorByEmail(mapContributors: Contributor[] | undefined, author_email: string): Contributor | undefined;
export declare function findMapAuthorLink(creator: Contributor): string | undefined;
export declare function extractAuthorsWithMultiple(mapContributors: Contributor[] | undefined, authorDataMap: Record<string, AuthorInfo>, c: Pick<Commit, 'body'>): Promise<void>;
export declare function newAvatarForAuthor(mappedAuthor: Contributor | undefined, commitAuthor: Pick<Commit, 'author_name' | 'author_email' | 'author_avatar'>): Promise<string>;
export declare function mapCommitAuthors(mapContributors: Contributor[] | undefined, map: Record<string, AuthorInfo>, commitAuthor: Pick<Commit, 'author_name' | 'author_email' | 'author_avatar'>): Promise<void>;
